"use strict";Object.defineProperty(exports, "__esModule", {value: true}); function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; } function _nullishCoalesce(lhs, rhsFn) { if (lhs != null) { return lhs; } else { return rhsFn(); } } function _optionalChain(ops) { let lastAccessLHS = undefined; let value = ops[0]; let i = 1; while (i < ops.length) { const op = ops[i]; const fn = ops[i + 1]; i += 2; if ((op === 'optionalAccess' || op === 'optionalCall') && value == null) { return undefined; } if (op === 'access' || op === 'optionalAccess') { lastAccessLHS = value; value = fn(value); } else if (op === 'call' || op === 'optionalCall') { value = fn((...args) => value.call(lastAccessLHS, ...args)); lastAccessLHS = undefined; } } return value; } var _class;var _promises = require('fs/promises');var _path = require('path'); var _path2 = _interopRequireDefault(_path);var _gzipjs = require('gzip-js'); var _gzipjs2 = _interopRequireDefault(_gzipjs);var _ignorewalk = require('ignore-walk'); var _ignorewalk2 = _interopRequireDefault(_ignorewalk);var _tar = require('tar'); var _tar2 = _interopRequireDefault(_tar);var _tarjs = require('tar-js'); var _tarjs2 = _interopRequireDefault(_tarjs);var P=class extends Error{constructor(e,o,n){super(n),this.name="ApiError",this.url=o.url,this.status=o.status,this.statusText=o.statusText,this.body=o.body,this.request=e}};var O=class extends Error{constructor(e){super(e),this.name="CancelError"}get isCancelled(){return!0}},x=class{#r;#o;#e;#t;#n;#s;#i;constructor(e){this.#r=!1,this.#o=!1,this.#e=!1,this.#t=[],this.#n=new Promise((o,n)=>{this.#s=o,this.#i=n;let t=l=>{this.#r||this.#o||this.#e||(this.#r=!0,_optionalChain([this, 'access', _2 => _2.#s, 'optionalCall', _3 => _3(l)]))},i=l=>{this.#r||this.#o||this.#e||(this.#o=!0,_optionalChain([this, 'access', _4 => _4.#i, 'optionalCall', _5 => _5(l)]))},a=l=>{this.#r||this.#o||this.#e||this.#t.push(l)};return Object.defineProperty(a,"isResolved",{get:()=>this.#r}),Object.defineProperty(a,"isRejected",{get:()=>this.#o}),Object.defineProperty(a,"isCancelled",{get:()=>this.#e}),e(t,i,a)})}get[Symbol.toStringTag](){return"Cancellable Promise"}then(e,o){return this.#n.then(e,o)}catch(e){return this.#n.catch(e)}finally(e){return this.#n.finally(e)}cancel(){if(!(this.#r||this.#o||this.#e)){if(this.#e=!0,this.#t.length)try{for(let e of this.#t)e()}catch(e){console.warn("Cancellation threw an error",e);return}this.#t.length=0,_optionalChain([this, 'access', _6 => _6.#i, 'optionalCall', _7 => _7(new O("Request aborted"))])}}get isCancelled(){return this.#e}};var s={BASE:"https://sindri.app",VERSION:"1.5.40",WITH_CREDENTIALS:!1,CREDENTIALS:"include",TOKEN:void 0,USERNAME:void 0,PASSWORD:void 0,HEADERS:void 0,ENCODE_PATH:void 0};var _axios = require('axios'); var _axios2 = _interopRequireDefault(_axios);var _buffer = require('buffer');var _formdatanode = require('formdata-node');var w=process.env.BROWSER_BUILD?window.File:_buffer.File,A=process.env.BROWSER_BUILD?window.FormData:_formdatanode.FormData;var q=r=>r!=null,_=r=>typeof r=="string",F=r=>_(r)&&r!=="",$=r=>typeof r=="object"&&typeof r.type=="string"&&typeof r.stream=="function"&&typeof r.arrayBuffer=="function"&&typeof r.constructor=="function"&&typeof r.constructor.name=="string"&&/^(Blob|File)$/.test(r.constructor.name)&&/^(Blob|File)$/.test(r[Symbol.toStringTag]),W=r=>r instanceof A,M=r=>r>=200&&r<300,J=r=>{try{return btoa(r)}catch (e2){return Buffer.from(r).toString("base64")}},V=r=>{let e=[],o=(t,i)=>{e.push(`${encodeURIComponent(t)}=${encodeURIComponent(String(i))}`)},n=(t,i)=>{q(i)&&(Array.isArray(i)?i.forEach(a=>{n(t,a)}):typeof i=="object"?Object.entries(i).forEach(([a,l])=>{n(`${t}[${a}]`,l)}):o(t,i))};return Object.entries(r).forEach(([t,i])=>{n(t,i)}),e.length>0?`?${e.join("&")}`:""},Q=(r,e)=>{let o=r.ENCODE_PATH||encodeURI,n=e.url.replace("{api-version}",r.VERSION).replace(/{(.*?)}/g,(i,a)=>_optionalChain([e, 'access', _8 => _8.path, 'optionalAccess', _9 => _9.hasOwnProperty, 'call', _10 => _10(a)])?o(String(e.path[a])):i),t=`${r.BASE}${n}`;return e.query?`${t}${V(e.query)}`:t},X=r=>{if(r.formData){if(r.formData instanceof A)return r.formData;let e=new A,o=(n,t)=>{_(t)||$(t)?e.append(n,t):e.append(n,JSON.stringify(t))};return Object.entries(r.formData).filter(([n,t])=>q(t)).forEach(([n,t])=>{Array.isArray(t)?t.forEach(i=>o(n,i)):o(n,t)}),e}},v=async(r,e)=>typeof e=="function"?e(r):e,Y=async(r,e,o)=>{let n=await v(e,r.TOKEN),t=await v(e,r.USERNAME),i=await v(e,r.PASSWORD),a=await v(e,r.HEADERS),l=o&&"getHeaders"in o&&typeof _optionalChain([o, 'optionalAccess', _11 => _11.getHeaders])=="function"&&_optionalChain([o, 'optionalAccess', _12 => _12.getHeaders, 'call', _13 => _13()])||{},u=Object.entries({Accept:"application/json",...a,...e.headers,...l}).filter(([c,p])=>q(p)).reduce((c,[p,m])=>({...c,[p]:String(m)}),{});if(F(n)&&(u.Authorization=`Bearer ${n}`),F(t)&&F(i)){let c=J(`${t}:${i}`);u.Authorization=`Basic ${c}`}return e.body&&(e.mediaType?u["Content-Type"]=e.mediaType:$(e.body)?u["Content-Type"]=e.body.type||"application/octet-stream":_(e.body)?u["Content-Type"]="text/plain":W(e.body)||(u["Content-Type"]="application/json")),u},Z=r=>{if(r.body)return r.body},ee=async(r,e,o,n,t,i,a,l)=>{let u=_axios2.default.CancelToken.source(),c={url:o,headers:i,data:_nullishCoalesce(n, () => (t)),method:e.method,withCredentials:r.WITH_CREDENTIALS,cancelToken:u.token};a(()=>u.cancel("The user aborted a request."));try{return await l.request(c)}catch(p){let m=p;if(m.response)return m.response;throw p}},re=(r,e)=>{if(e){let o=r.headers[e];if(_(o))return o}},oe=r=>{if(r.status!==204)return r.data},te=(r,e)=>{let n={400:"Bad Request",401:"Unauthorized",403:"Forbidden",404:"Not Found",500:"Internal Server Error",502:"Bad Gateway",503:"Service Unavailable",...r.errors}[e.status];if(n)throw new P(r,e,n);if(!e.ok){let t=_nullishCoalesce(e.status, () => ("unknown")),i=_nullishCoalesce(e.statusText, () => ("unknown")),a=(()=>{try{return JSON.stringify(e.body,null,2)}catch (e3){return}})();throw new P(r,e,`Generic Error: status: ${t}; status text: ${i}; body: ${a}`)}},d=(r,e,o=_axios2.default)=>new x(async(n,t,i)=>{try{let a=Q(r,e),l=X(e),u=Z(e),c=await Y(r,e,l);if(!i.isCancelled){let p=await ee(r,e,a,u,l,c,i,o),m=oe(p),C=re(p,e.responseHeader),b={url:a,ok:M(p.status),status:p.status,statusText:p.statusText,body:_nullishCoalesce(C, () => (m))};te(e,b),n(b.body)}}catch(a){t(a)}});var R=class{static circuitCreate(e){return d(s,{method:"POST",url:"/api/v1/circuit/create",formData:e,mediaType:"multipart/form-data",errors:{412:"Precondition Failed",422:"Unprocessable Entity",500:"Internal Server Error",501:"Not Implemented"}})}static circuitList(e=!1){return d(s,{method:"GET",url:"/api/v1/circuit/list",query:{include_verification_key:e},errors:{500:"Internal Server Error"}})}static circuitDetail(e,o=!0){return d(s,{method:"GET",url:"/api/v1/circuit/{circuit_id}/detail",path:{circuit_id:e},query:{include_verification_key:o},errors:{404:"Not Found",500:"Internal Server Error"}})}static circuitDelete(e){return d(s,{method:"DELETE",url:"/api/v1/circuit/{circuit_id}/delete",path:{circuit_id:e},errors:{404:"Not Found",500:"Internal Server Error"}})}static circuitProofs(e,o=!1,n=!1,t=!1,i=!1){return d(s,{method:"GET",url:"/api/v1/circuit/{circuit_id}/proofs",path:{circuit_id:e},query:{include_proof_input:o,include_proof:n,include_public:t,include_verification_key:i},errors:{404:"Not Found",500:"Internal Server Error"}})}static proofCreate(e,o){return d(s,{method:"POST",url:"/api/v1/circuit/{circuit_id}/prove",path:{circuit_id:e},formData:o,mediaType:"application/x-www-form-urlencoded",errors:{404:"Not Found",412:"Precondition Failed",501:"Not Implemented"}})}};var I=class{static proofList(e=!1,o=!1,n=!1,t=!1){return d(s,{method:"GET",url:"/api/v1/proof/list",query:{include_proof_input:e,include_proof:o,include_public:n,include_verification_key:t},errors:{500:"Internal Server Error"}})}static proofDetail(e,o=!0,n=!0,t=!0,i=!0){return d(s,{method:"GET",url:"/api/v1/proof/{proof_id}/detail",path:{proof_id:e},query:{include_proof_input:o,include_proof:n,include_public:t,include_verification_key:i},errors:{404:"Not Found",500:"Internal Server Error"}})}static proofDelete(e){return d(s,{method:"DELETE",url:"/api/v1/proof/{proof_id}/delete",path:{proof_id:e},errors:{404:"Not Found",500:"Internal Server Error"}})}};var _fs = require('fs'); var _fs2 = _interopRequireDefault(_fs);var _envpaths = require('env-paths'); var _envpaths2 = _interopRequireDefault(_envpaths);var _lodash = require('lodash'); var _lodash2 = _interopRequireDefault(_lodash);var _zod = require('zod');var _pino = require('pino'); var _pino2 = _interopRequireDefault(_pino);var _pinopretty = require('pino-pretty'); var _pinopretty2 = _interopRequireDefault(_pinopretty);var h=_pino2.default.call(void 0, process.env.BROWSER_BUILD?{browser:{asObject:!0}}:_pinopretty2.default.call(void 0, {colorize:!0,destination:2,ignore:"hostname,pid",levelFirst:!1,sync:!0}));h.level="silent";var ce=()=>{let r=_envpaths2.default.call(void 0, "sindri",{suffix:""});return _path2.default.join(r.config,"sindri.conf.json")},U=_zod.z.object({auth:_zod.z.nullable(_zod.z.object({apiKey:_zod.z.string(),apiKeyId:_zod.z.string(),apiKeyName:_zod.z.string(),baseUrl:_zod.z.string().url(),teamId:_zod.z.number(),teamSlug:_zod.z.string()})).default(null)}),le=U.parse({}),K=()=>{let r=ce();if(_fs2.default.existsSync(r)){h.debug(`Loading config from "${r}".`);try{let e=_fs2.default.readFileSync(r,{encoding:"utf-8"}),o=U.parse(JSON.parse(e));return h.debug("Config loaded successfully."),o}catch(e){h.warn(`The config schema in "${r}" is invalid and will not be used.
To remove it and start fresh, run:
    rm ${r}`),h.debug(e)}}return h.debug(`Config file "${r}" does not exist, initializing default config.`),_lodash2.default.cloneDeep(le)};var D= (_class =class{__init() {this.pollingInterval=1e3}constructor(e={}){;_class.prototype.__init.call(this);this.authorize(e)}get apiKey(){return s.TOKEN&&typeof s.TOKEN!="string"?null:s.TOKEN||null}get baseUrl(){return s.BASE}get logLevel(){return h.level}set logLevel(e){h.level=e}authorize(e){if(process.env.BROWSER_BUILD)s.BASE=e.baseUrl||"https://sindri.app",s.TOKEN=e.apiKey;else{let o=K();s.BASE=e.baseUrl||process.env.SINDRI_BASE_URL||_optionalChain([o, 'access', _14 => _14.auth, 'optionalAccess', _15 => _15.baseUrl])||s.BASE||"https://sindri.app",s.TOKEN=e.apiKey||process.env.SINDRI_API_KEY||_optionalChain([o, 'access', _16 => _16.auth, 'optionalAccess', _17 => _17.apiKey])}return!!(s.BASE&&s.TOKEN)}async createCircuit(e,o=["latest"]){let n=new A;o=typeof o=="string"?[o]:_nullishCoalesce(o, () => ([]));for(let c of o){if(!/^[-a-zA-Z0-9_]+$/.test(c))throw new Error(`"${c}" is not a valid tag. Tags may only contain alphanumeric characters, underscores, and hyphens.`);n.append("tags",c)}if(o.length===0&&n.append("tags",""),typeof e=="string"){if(process.env.BROWSER_BUILD)throw new Error("Specifying `project` as a path is not allowed in the browser build.");let c;try{c=await _promises.stat.call(void 0, e)}catch (e4){throw new Error(`The "${e}" path does not exist or you do not have permission to access it.`)}if(c.isFile()){if(!/\.(zip|tar|tar\.gz|tgz)$/i.test(e))throw new Error("Only gzipped tarballs or zip files are supported.");let p=_path2.default.basename(e),m=await _promises.readFile.call(void 0, e);n.append("files",new w([m],p))}else if(c.isDirectory()){let p=_path2.default.join(e,"sindri.json"),m;try{m=await _promises.readFile.call(void 0, p,{encoding:"utf-8"})}catch (e5){throw new Error(`Expected Sindri manifest file at "${p}" does not exist.`)}let C;try{C=JSON.parse(m)}catch (e6){throw new Error(`Could not parse "${p}", is it valid JSON?`)}let b=_optionalChain([C, 'optionalAccess', _18 => _18.name]);if(!b)throw new Error(`No circuit "name" field was found in "${p}", the manifest is invalid.`);let T=_ignorewalk2.default.sync({follow:!0,ignoreFiles:[".sindriignore"],path:e}).filter(E=>!/(^|\/)\.git(\/|$)/.test(E)),y=_path2.default.basename(p);T.includes(y)||T.push(y);let S=`${b}.tar.gz`;T.sort((E,k)=>E.localeCompare(k));let N=_tar2.default.c({cwd:e,gzip:!0,onwarn:(E,k)=>{h.warn(`While creating tarball: ${E} - ${k}`)},prefix:`${b}/`,sync:!0},T);n.append("files",new w([N.read()],S))}else throw new Error(`The "${e}" path is not a file or directory.`)}else if(Array.isArray(e)){if(!e.every(y=>y instanceof w))throw new Error("All entries in `project` must be `File` instances.");let c=e.find(y=>y.name==="sindri.json");if(!c)throw new Error("The `project` array must include a `sindri.json` file.");let p;try{p=JSON.parse(await c.text())}catch (e7){throw new Error('Could not parse "sindri.json", is it valid JSON?')}let m=_optionalChain([p, 'optionalAccess', _19 => _19.name]);if(!m)throw new Error('No circuit "name" field was found in "sindri.json", the manifest is invalid.');let C=new _tarjs2.default;e.sort((y,S)=>y.name.localeCompare(S.name));for(let y of e){let S=new Uint8Array(await y.arrayBuffer());await new Promise(N=>C.append(`${m}/${y.name}`,S,N))}let b=new Uint8Array(_gzipjs2.default.zip(C.out)),T=new w([b],`${m}.tar.gz`);process.env.BROWSER_BUILD,n.append("files",T)}let t=s.HEADERS;s.HEADERS={"Content-Type":"multipart/form-data; boundary=----WebKitFormBoundary0buQ8d6EhWcs9X9d"};let a=await R.circuitCreate(n);s.HEADERS=t;let l=a.circuit_id,u;for(;u=await R.circuitDetail(l,!1),!(u.status==="Ready"||u.status==="Failed");)await new Promise(c=>setTimeout(c,this.pollingInterval));return u}async getAllCircuitProofs(e){return await R.circuitProofs(e)}async getAllCircuits(){return await R.circuitList()}async getAllProofs(){return await I.proofList()}async getCircuit(e){return await R.circuitDetail(e)}async getProof(e){return await I.proofDetail(e)}async proveCircuit(e,o){let n=await R.proofCreate(e,{proof_input:o}),t;for(;t=await I.proofDetail(n.proof_id),!(t.status==="Ready"||t.status==="Failed");)await new Promise(i=>setTimeout(i,this.pollingInterval));return t}}, _class);var Ur=new D;exports.default = Ur;

module.exports = exports.default;
//# sourceMappingURL=index.js.map