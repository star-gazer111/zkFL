import{readFile as G,stat as me}from"fs/promises";import L from"path";import fe from"gzip-js";import de from"ignore-walk";import ye from"tar";import he from"tar-js";var A=class extends Error{url;status;statusText;body;request;constructor(e,o,n){super(n),this.name="ApiError",this.url=o.url,this.status=o.status,this.statusText=o.statusText,this.body=o.body,this.request=e}};var v=class extends Error{constructor(e){super(e),this.name="CancelError"}get isCancelled(){return!0}},w=class{#r;#o;#e;#t;#n;#s;#i;constructor(e){this.#r=!1,this.#o=!1,this.#e=!1,this.#t=[],this.#n=new Promise((o,n)=>{this.#s=o,this.#i=n;let t=l=>{this.#r||this.#o||this.#e||(this.#r=!0,this.#s?.(l))},i=l=>{this.#r||this.#o||this.#e||(this.#o=!0,this.#i?.(l))},a=l=>{this.#r||this.#o||this.#e||this.#t.push(l)};return Object.defineProperty(a,"isResolved",{get:()=>this.#r}),Object.defineProperty(a,"isRejected",{get:()=>this.#o}),Object.defineProperty(a,"isCancelled",{get:()=>this.#e}),e(t,i,a)})}get[Symbol.toStringTag](){return"Cancellable Promise"}then(e,o){return this.#n.then(e,o)}catch(e){return this.#n.catch(e)}finally(e){return this.#n.finally(e)}cancel(){if(!(this.#r||this.#o||this.#e)){if(this.#e=!0,this.#t.length)try{for(let e of this.#t)e()}catch(e){console.warn("Cancellation threw an error",e);return}this.#t.length=0,this.#i?.(new v("Request aborted"))}}get isCancelled(){return this.#e}};var s={BASE:"https://sindri.app",VERSION:"1.5.40",WITH_CREDENTIALS:!1,CREDENTIALS:"include",TOKEN:void 0,USERNAME:void 0,PASSWORD:void 0,HEADERS:void 0,ENCODE_PATH:void 0};import $ from"axios";import{File as z}from"buffer";import{FormData as W}from"formdata-node";var O=process.env.BROWSER_BUILD?window.File:z,S=process.env.BROWSER_BUILD?window.FormData:W;var B=r=>r!=null,D=r=>typeof r=="string",q=r=>D(r)&&r!=="",H=r=>typeof r=="object"&&typeof r.type=="string"&&typeof r.stream=="function"&&typeof r.arrayBuffer=="function"&&typeof r.constructor=="function"&&typeof r.constructor.name=="string"&&/^(Blob|File)$/.test(r.constructor.name)&&/^(Blob|File)$/.test(r[Symbol.toStringTag]),M=r=>r instanceof S,J=r=>r>=200&&r<300,V=r=>{try{return btoa(r)}catch{return Buffer.from(r).toString("base64")}},Q=r=>{let e=[],o=(t,i)=>{e.push(`${encodeURIComponent(t)}=${encodeURIComponent(String(i))}`)},n=(t,i)=>{B(i)&&(Array.isArray(i)?i.forEach(a=>{n(t,a)}):typeof i=="object"?Object.entries(i).forEach(([a,l])=>{n(`${t}[${a}]`,l)}):o(t,i))};return Object.entries(r).forEach(([t,i])=>{n(t,i)}),e.length>0?`?${e.join("&")}`:""},X=(r,e)=>{let o=r.ENCODE_PATH||encodeURI,n=e.url.replace("{api-version}",r.VERSION).replace(/{(.*?)}/g,(i,a)=>e.path?.hasOwnProperty(a)?o(String(e.path[a])):i),t=`${r.BASE}${n}`;return e.query?`${t}${Q(e.query)}`:t},Y=r=>{if(r.formData){if(r.formData instanceof S)return r.formData;let e=new S,o=(n,t)=>{D(t)||H(t)?e.append(n,t):e.append(n,JSON.stringify(t))};return Object.entries(r.formData).filter(([n,t])=>B(t)).forEach(([n,t])=>{Array.isArray(t)?t.forEach(i=>o(n,i)):o(n,t)}),e}},_=async(r,e)=>typeof e=="function"?e(r):e,Z=async(r,e,o)=>{let n=await _(e,r.TOKEN),t=await _(e,r.USERNAME),i=await _(e,r.PASSWORD),a=await _(e,r.HEADERS),l=o&&"getHeaders"in o&&typeof o?.getHeaders=="function"&&o?.getHeaders()||{},u=Object.entries({Accept:"application/json",...a,...e.headers,...l}).filter(([c,p])=>B(p)).reduce((c,[p,m])=>({...c,[p]:String(m)}),{});if(q(n)&&(u.Authorization=`Bearer ${n}`),q(t)&&q(i)){let c=V(`${t}:${i}`);u.Authorization=`Basic ${c}`}return e.body&&(e.mediaType?u["Content-Type"]=e.mediaType:H(e.body)?u["Content-Type"]=e.body.type||"application/octet-stream":D(e.body)?u["Content-Type"]="text/plain":M(e.body)||(u["Content-Type"]="application/json")),u},ee=r=>{if(r.body)return r.body},re=async(r,e,o,n,t,i,a,l)=>{let u=$.CancelToken.source(),c={url:o,headers:i,data:n??t,method:e.method,withCredentials:r.WITH_CREDENTIALS,cancelToken:u.token};a(()=>u.cancel("The user aborted a request."));try{return await l.request(c)}catch(p){let m=p;if(m.response)return m.response;throw p}},oe=(r,e)=>{if(e){let o=r.headers[e];if(D(o))return o}},te=r=>{if(r.status!==204)return r.data},ne=(r,e)=>{let n={400:"Bad Request",401:"Unauthorized",403:"Forbidden",404:"Not Found",500:"Internal Server Error",502:"Bad Gateway",503:"Service Unavailable",...r.errors}[e.status];if(n)throw new A(r,e,n);if(!e.ok){let t=e.status??"unknown",i=e.statusText??"unknown",a=(()=>{try{return JSON.stringify(e.body,null,2)}catch{return}})();throw new A(r,e,`Generic Error: status: ${t}; status text: ${i}; body: ${a}`)}},y=(r,e,o=$)=>new w(async(n,t,i)=>{try{let a=X(r,e),l=Y(e),u=ee(e),c=await Z(r,e,l);if(!i.isCancelled){let p=await re(r,e,a,u,l,c,i,o),m=te(p),T=oe(p,e.responseHeader),C={url:a,ok:J(p.status),status:p.status,statusText:p.statusText,body:T??m};ne(e,C),n(C.body)}}catch(a){t(a)}});var g=class{static circuitCreate(e){return y(s,{method:"POST",url:"/api/v1/circuit/create",formData:e,mediaType:"multipart/form-data",errors:{412:"Precondition Failed",422:"Unprocessable Entity",500:"Internal Server Error",501:"Not Implemented"}})}static circuitList(e=!1){return y(s,{method:"GET",url:"/api/v1/circuit/list",query:{include_verification_key:e},errors:{500:"Internal Server Error"}})}static circuitDetail(e,o=!0){return y(s,{method:"GET",url:"/api/v1/circuit/{circuit_id}/detail",path:{circuit_id:e},query:{include_verification_key:o},errors:{404:"Not Found",500:"Internal Server Error"}})}static circuitDelete(e){return y(s,{method:"DELETE",url:"/api/v1/circuit/{circuit_id}/delete",path:{circuit_id:e},errors:{404:"Not Found",500:"Internal Server Error"}})}static circuitProofs(e,o=!1,n=!1,t=!1,i=!1){return y(s,{method:"GET",url:"/api/v1/circuit/{circuit_id}/proofs",path:{circuit_id:e},query:{include_proof_input:o,include_proof:n,include_public:t,include_verification_key:i},errors:{404:"Not Found",500:"Internal Server Error"}})}static proofCreate(e,o){return y(s,{method:"POST",url:"/api/v1/circuit/{circuit_id}/prove",path:{circuit_id:e},formData:o,mediaType:"application/x-www-form-urlencoded",errors:{404:"Not Found",412:"Precondition Failed",501:"Not Implemented"}})}};var P=class{static proofList(e=!1,o=!1,n=!1,t=!1){return y(s,{method:"GET",url:"/api/v1/proof/list",query:{include_proof_input:e,include_proof:o,include_public:n,include_verification_key:t},errors:{500:"Internal Server Error"}})}static proofDetail(e,o=!0,n=!0,t=!0,i=!0){return y(s,{method:"GET",url:"/api/v1/proof/{proof_id}/detail",path:{proof_id:e},query:{include_proof_input:o,include_proof:n,include_public:t,include_verification_key:i},errors:{404:"Not Found",500:"Internal Server Error"}})}static proofDelete(e){return y(s,{method:"DELETE",url:"/api/v1/proof/{proof_id}/delete",path:{proof_id:e},errors:{404:"Not Found",500:"Internal Server Error"}})}};import U from"fs";import ae from"path";import pe from"env-paths";import ce from"lodash";import{z as b}from"zod";import ie from"pino";import se from"pino-pretty";var R=ie(process.env.BROWSER_BUILD?{browser:{asObject:!0}}:se({colorize:!0,destination:2,ignore:"hostname,pid",levelFirst:!1,sync:!0}));R.level="silent";var le=()=>{let r=pe("sindri",{suffix:""});return ae.join(r.config,"sindri.conf.json")},K=b.object({auth:b.nullable(b.object({apiKey:b.string(),apiKeyId:b.string(),apiKeyName:b.string(),baseUrl:b.string().url(),teamId:b.number(),teamSlug:b.string()})).default(null)}),ue=K.parse({}),j=()=>{let r=le();if(U.existsSync(r)){R.debug(`Loading config from "${r}".`);try{let e=U.readFileSync(r,{encoding:"utf-8"}),o=K.parse(JSON.parse(e));return R.debug("Config loaded successfully."),o}catch(e){R.warn(`The config schema in "${r}" is invalid and will not be used.
To remove it and start fresh, run:
    rm ${r}`),R.debug(e)}}return R.debug(`Config file "${r}" does not exist, initializing default config.`),ce.cloneDeep(ue)};var N=class{pollingInterval=1e3;constructor(e={}){this.authorize(e)}get apiKey(){return s.TOKEN&&typeof s.TOKEN!="string"?null:s.TOKEN||null}get baseUrl(){return s.BASE}get logLevel(){return R.level}set logLevel(e){R.level=e}authorize(e){if(process.env.BROWSER_BUILD)s.BASE=e.baseUrl||"https://sindri.app",s.TOKEN=e.apiKey;else{let o=j();s.BASE=e.baseUrl||process.env.SINDRI_BASE_URL||o.auth?.baseUrl||s.BASE||"https://sindri.app",s.TOKEN=e.apiKey||process.env.SINDRI_API_KEY||o.auth?.apiKey}return!!(s.BASE&&s.TOKEN)}async createCircuit(e,o=["latest"]){let n=new S;o=typeof o=="string"?[o]:o??[];for(let c of o){if(!/^[-a-zA-Z0-9_]+$/.test(c))throw new Error(`"${c}" is not a valid tag. Tags may only contain alphanumeric characters, underscores, and hyphens.`);n.append("tags",c)}if(o.length===0&&n.append("tags",""),typeof e=="string"){if(process.env.BROWSER_BUILD)throw new Error("Specifying `project` as a path is not allowed in the browser build.");let c;try{c=await me(e)}catch{throw new Error(`The "${e}" path does not exist or you do not have permission to access it.`)}if(c.isFile()){if(!/\.(zip|tar|tar\.gz|tgz)$/i.test(e))throw new Error("Only gzipped tarballs or zip files are supported.");let p=L.basename(e),m=await G(e);n.append("files",new O([m],p))}else if(c.isDirectory()){let p=L.join(e,"sindri.json"),m;try{m=await G(p,{encoding:"utf-8"})}catch{throw new Error(`Expected Sindri manifest file at "${p}" does not exist.`)}let T;try{T=JSON.parse(m)}catch{throw new Error(`Could not parse "${p}", is it valid JSON?`)}let C=T?.name;if(!C)throw new Error(`No circuit "name" field was found in "${p}", the manifest is invalid.`);let I=de.sync({follow:!0,ignoreFiles:[".sindriignore"],path:e}).filter(x=>!/(^|\/)\.git(\/|$)/.test(x)),h=L.basename(p);I.includes(h)||I.push(h);let E=`${C}.tar.gz`;I.sort((x,F)=>x.localeCompare(F));let k=ye.c({cwd:e,gzip:!0,onwarn:(x,F)=>{R.warn(`While creating tarball: ${x} - ${F}`)},prefix:`${C}/`,sync:!0},I);n.append("files",new O([k.read()],E))}else throw new Error(`The "${e}" path is not a file or directory.`)}else if(Array.isArray(e)){if(!e.every(h=>h instanceof O))throw new Error("All entries in `project` must be `File` instances.");let c=e.find(h=>h.name==="sindri.json");if(!c)throw new Error("The `project` array must include a `sindri.json` file.");let p;try{p=JSON.parse(await c.text())}catch{throw new Error('Could not parse "sindri.json", is it valid JSON?')}let m=p?.name;if(!m)throw new Error('No circuit "name" field was found in "sindri.json", the manifest is invalid.');let T=new he;e.sort((h,E)=>h.name.localeCompare(E.name));for(let h of e){let E=new Uint8Array(await h.arrayBuffer());await new Promise(k=>T.append(`${m}/${h.name}`,E,k))}let C=new Uint8Array(fe.zip(T.out)),I=new O([C],`${m}.tar.gz`);process.env.BROWSER_BUILD,n.append("files",I)}let t=s.HEADERS;s.HEADERS={"Content-Type":"multipart/form-data; boundary=----WebKitFormBoundary0buQ8d6EhWcs9X9d"};let a=await g.circuitCreate(n);s.HEADERS=t;let l=a.circuit_id,u;for(;u=await g.circuitDetail(l,!1),!(u.status==="Ready"||u.status==="Failed");)await new Promise(c=>setTimeout(c,this.pollingInterval));return u}async getAllCircuitProofs(e){return await g.circuitProofs(e)}async getAllCircuits(){return await g.circuitList()}async getAllProofs(){return await P.proofList()}async getCircuit(e){return await g.circuitDetail(e)}async getProof(e){return await P.proofDetail(e)}async proveCircuit(e,o){let n=await g.proofCreate(e,{proof_input:o}),t;for(;t=await P.proofDetail(n.proof_id),!(t.status==="Ready"||t.status==="Failed");)await new Promise(i=>setTimeout(i,this.pollingInterval));return t}};var Kr=new N;export{Kr as default};
//# sourceMappingURL=index.mjs.map