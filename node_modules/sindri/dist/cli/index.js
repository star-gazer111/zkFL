#! /usr/bin/env node
"use strict";var sr=Object.create;var V=Object.defineProperty;var ar=Object.getOwnPropertyDescriptor;var cr=Object.getOwnPropertyNames;var lr=Object.getPrototypeOf,pr=Object.prototype.hasOwnProperty;var mr=(r,e)=>{for(var t in e)V(r,t,{get:e[t],enumerable:!0})},Re=(r,e,t,n)=>{if(e&&typeof e=="object"||typeof e=="function")for(let i of cr(e))!pr.call(r,i)&&i!==t&&V(r,i,{get:()=>e[i],enumerable:!(n=ar(e,i))||n.enumerable});return r};var y=(r,e,t)=>(t=r!=null?sr(lr(r)):{},Re(e||!r||!r.__esModule?V(t,"default",{value:r,enumerable:!0}):t,r)),ur=r=>Re(V({},"__esModule",{value:!0}),r);var Or={};mr(Or,{program:()=>nr});module.exports=ur(Or);var dr=()=>typeof document>"u"?new URL("file:"+__filename).href:document.currentScript&&document.currentScript.src||new URL("main.js",document.baseURI).href,h=dr();var tr=y(require("assert")),se=require("process"),ir=require("@commander-js/extra-typings");var ge=require("@commander-js/extra-typings");var L=y(require("fs")),ue=y(require("path")),xe=y(require("env-paths")),z=y(require("lodash")),T=require("zod");var A=class extends Error{url;status;statusText;body;request;constructor(e,t,n){super(n),this.name="ApiError",this.url=t.url,this.status=t.status,this.statusText=t.statusText,this.body=t.body,this.request=e}};var Y=class extends Error{constructor(e){super(e),this.name="CancelError"}get isCancelled(){return!0}},K=class{#r;#o;#e;#t;#i;#s;#n;constructor(e){this.#r=!1,this.#o=!1,this.#e=!1,this.#t=[],this.#i=new Promise((t,n)=>{this.#s=t,this.#n=n;let i=d=>{this.#r||this.#o||this.#e||(this.#r=!0,this.#s?.(d))},s=d=>{this.#r||this.#o||this.#e||(this.#o=!0,this.#n?.(d))},p=d=>{this.#r||this.#o||this.#e||this.#t.push(d)};return Object.defineProperty(p,"isResolved",{get:()=>this.#r}),Object.defineProperty(p,"isRejected",{get:()=>this.#o}),Object.defineProperty(p,"isCancelled",{get:()=>this.#e}),e(i,s,p)})}get[Symbol.toStringTag](){return"Cancellable Promise"}then(e,t){return this.#i.then(e,t)}catch(e){return this.#i.catch(e)}finally(e){return this.#i.finally(e)}cancel(){if(!(this.#r||this.#o||this.#e)){if(this.#e=!0,this.#t.length)try{for(let e of this.#t)e()}catch(e){console.warn("Cancellation threw an error",e);return}this.#t.length=0,this.#n?.(new Y("Request aborted"))}}get isCancelled(){return this.#e}};var c={BASE:"https://sindri.app",VERSION:"1.5.40",WITH_CREDENTIALS:!1,CREDENTIALS:"include",TOKEN:void 0,USERNAME:void 0,PASSWORD:void 0,HEADERS:void 0,ENCODE_PATH:void 0};var pe=y(require("axios"));var Ce=require("buffer"),Se=require("formdata-node");var U=process.env.BROWSER_BUILD?window.File:Ce.File,q=process.env.BROWSER_BUILD?window.FormData:Se.FormData;var me=r=>r!=null,Q=r=>typeof r=="string",le=r=>Q(r)&&r!=="",ve=r=>typeof r=="object"&&typeof r.type=="string"&&typeof r.stream=="function"&&typeof r.arrayBuffer=="function"&&typeof r.constructor=="function"&&typeof r.constructor.name=="string"&&/^(Blob|File)$/.test(r.constructor.name)&&/^(Blob|File)$/.test(r[Symbol.toStringTag]),fr=r=>r instanceof q,gr=r=>r>=200&&r<300,yr=r=>{try{return btoa(r)}catch{return Buffer.from(r).toString("base64")}},hr=r=>{let e=[],t=(i,s)=>{e.push(`${encodeURIComponent(i)}=${encodeURIComponent(String(s))}`)},n=(i,s)=>{me(s)&&(Array.isArray(s)?s.forEach(p=>{n(i,p)}):typeof s=="object"?Object.entries(s).forEach(([p,d])=>{n(`${i}[${p}]`,d)}):t(i,s))};return Object.entries(r).forEach(([i,s])=>{n(i,s)}),e.length>0?`?${e.join("&")}`:""},br=(r,e)=>{let t=r.ENCODE_PATH||encodeURI,n=e.url.replace("{api-version}",r.VERSION).replace(/{(.*?)}/g,(s,p)=>e.path?.hasOwnProperty(p)?t(String(e.path[p])):s),i=`${r.BASE}${n}`;return e.query?`${i}${hr(e.query)}`:i},wr=r=>{if(r.formData){if(r.formData instanceof q)return r.formData;let e=new q,t=(n,i)=>{Q(i)||ve(i)?e.append(n,i):e.append(n,JSON.stringify(i))};return Object.entries(r.formData).filter(([n,i])=>me(i)).forEach(([n,i])=>{Array.isArray(i)?i.forEach(s=>t(n,s)):t(n,i)}),e}},Z=async(r,e)=>typeof e=="function"?e(r):e,Rr=async(r,e,t)=>{let n=await Z(e,r.TOKEN),i=await Z(e,r.USERNAME),s=await Z(e,r.PASSWORD),p=await Z(e,r.HEADERS),d=t&&"getHeaders"in t&&typeof t?.getHeaders=="function"&&t?.getHeaders()||{},f=Object.entries({Accept:"application/json",...p,...e.headers,...d}).filter(([u,a])=>me(a)).reduce((u,[a,m])=>({...u,[a]:String(m)}),{});if(le(n)&&(f.Authorization=`Bearer ${n}`),le(i)&&le(s)){let u=yr(`${i}:${s}`);f.Authorization=`Basic ${u}`}return e.body&&(e.mediaType?f["Content-Type"]=e.mediaType:ve(e.body)?f["Content-Type"]=e.body.type||"application/octet-stream":Q(e.body)?f["Content-Type"]="text/plain":fr(e.body)||(f["Content-Type"]="application/json")),f},Cr=r=>{if(r.body)return r.body},Sr=async(r,e,t,n,i,s,p,d)=>{let f=pe.default.CancelToken.source(),u={url:t,headers:s,data:n??i,method:e.method,withCredentials:r.WITH_CREDENTIALS,cancelToken:f.token};p(()=>f.cancel("The user aborted a request."));try{return await d.request(u)}catch(a){let m=a;if(m.response)return m.response;throw a}},vr=(r,e)=>{if(e){let t=r.headers[e];if(Q(t))return t}},Pr=r=>{if(r.status!==204)return r.data},Ar=(r,e)=>{let n={400:"Bad Request",401:"Unauthorized",403:"Forbidden",404:"Not Found",500:"Internal Server Error",502:"Bad Gateway",503:"Service Unavailable",...r.errors}[e.status];if(n)throw new A(r,e,n);if(!e.ok){let i=e.status??"unknown",s=e.statusText??"unknown",p=(()=>{try{return JSON.stringify(e.body,null,2)}catch{return}})();throw new A(r,e,`Generic Error: status: ${i}; status text: ${s}; body: ${p}`)}},b=(r,e,t=pe.default)=>new K(async(n,i,s)=>{try{let p=br(r,e),d=wr(e),f=Cr(e),u=await Rr(r,e,d);if(!s.isCancelled){let a=await Sr(r,e,p,f,d,u,s,t),m=Pr(a),g=vr(a,e.responseHeader),w={url:p,ok:gr(a.status),status:a.status,statusText:a.statusText,body:g??m};Ar(e,w),n(w.body)}}catch(p){i(p)}});var _=class{static apikeyGenerate(e){return b(c,{method:"POST",url:"/api/apikey/generate",body:e,mediaType:"application/json",errors:{401:"Unauthorized"}})}static apikeyGenerateWithAuth(e=""){return b(c,{method:"POST",url:"/api/v1/apikey/generate",query:{name:e}})}static apikeyList(){return b(c,{method:"GET",url:"/api/v1/apikey/list",errors:{500:"Internal Server Error"}})}static apikeyDelete(e){return b(c,{method:"DELETE",url:"/api/v1/apikey/{apikey_id}/delete",path:{apikey_id:e},errors:{404:"Not Found",500:"Internal Server Error"}})}};var v=class{static circuitCreate(e){return b(c,{method:"POST",url:"/api/v1/circuit/create",formData:e,mediaType:"multipart/form-data",errors:{412:"Precondition Failed",422:"Unprocessable Entity",500:"Internal Server Error",501:"Not Implemented"}})}static circuitList(e=!1){return b(c,{method:"GET",url:"/api/v1/circuit/list",query:{include_verification_key:e},errors:{500:"Internal Server Error"}})}static circuitDetail(e,t=!0){return b(c,{method:"GET",url:"/api/v1/circuit/{circuit_id}/detail",path:{circuit_id:e},query:{include_verification_key:t},errors:{404:"Not Found",500:"Internal Server Error"}})}static circuitDelete(e){return b(c,{method:"DELETE",url:"/api/v1/circuit/{circuit_id}/delete",path:{circuit_id:e},errors:{404:"Not Found",500:"Internal Server Error"}})}static circuitProofs(e,t=!1,n=!1,i=!1,s=!1){return b(c,{method:"GET",url:"/api/v1/circuit/{circuit_id}/proofs",path:{circuit_id:e},query:{include_proof_input:t,include_proof:n,include_public:i,include_verification_key:s},errors:{404:"Not Found",500:"Internal Server Error"}})}static proofCreate(e,t){return b(c,{method:"POST",url:"/api/v1/circuit/{circuit_id}/prove",path:{circuit_id:e},formData:t,mediaType:"application/x-www-form-urlencoded",errors:{404:"Not Found",412:"Precondition Failed",501:"Not Implemented"}})}};var O=class{static passwordChangeWithJwtAuth(e){return b(c,{method:"POST",url:"/api/v1/password/change",formData:e,mediaType:"application/x-www-form-urlencoded",errors:{422:"Unprocessable Entity"}})}static sindriManifestSchema(){return b(c,{method:"GET",url:"/api/v1/sindri-manifest-schema.json"})}static teamMe(){return b(c,{method:"GET",url:"/api/v1/team/me"})}static userMeWithJwtAuth(){return b(c,{method:"GET",url:"/api/v1/user/me"})}};var $=class{static proofList(e=!1,t=!1,n=!1,i=!1){return b(c,{method:"GET",url:"/api/v1/proof/list",query:{include_proof_input:e,include_proof:t,include_public:n,include_verification_key:i},errors:{500:"Internal Server Error"}})}static proofDetail(e,t=!0,n=!0,i=!0,s=!0){return b(c,{method:"GET",url:"/api/v1/proof/{proof_id}/detail",path:{proof_id:e},query:{include_proof_input:t,include_proof:n,include_public:i,include_verification_key:s},errors:{404:"Not Found",500:"Internal Server Error"}})}static proofDelete(e){return b(c,{method:"DELETE",url:"/api/v1/proof/{proof_id}/delete",path:{proof_id:e},errors:{404:"Not Found",500:"Internal Server Error"}})}};var H=class{static bf740E1AControllerObtainToken(e){return b(c,{method:"POST",url:"/api/token/pair",body:e,mediaType:"application/json"})}static db93F15ControllerRefreshToken(e){return b(c,{method:"POST",url:"/api/token/refresh",body:e,mediaType:"application/json"})}static abc17FbControllerVerifyToken(e){return b(c,{method:"POST",url:"/api/token/verify",body:e,mediaType:"application/json"})}};var Pe=y(require("pino")),Ae=y(require("pino-pretty")),o=(0,Pe.default)(process.env.BROWSER_BUILD?{browser:{asObject:!0}}:(0,Ae.default)({colorize:!0,destination:2,ignore:"hostname,pid",levelFirst:!1,sync:!0}));o.level="silent";var X=console.log;var Ie=()=>{let r=(0,xe.default)("sindri",{suffix:""});return ue.default.join(r.config,"sindri.conf.json")},de=T.z.object({auth:T.z.nullable(T.z.object({apiKey:T.z.string(),apiKeyId:T.z.string(),apiKeyName:T.z.string(),baseUrl:T.z.string().url(),teamId:T.z.number(),teamSlug:T.z.string()})).default(null)}),xr=de.parse({}),fe=()=>{let r=Ie();if(L.default.existsSync(r)){o.debug(`Loading config from "${r}".`);try{let e=L.default.readFileSync(r,{encoding:"utf-8"}),t=de.parse(JSON.parse(e));return o.debug("Config loaded successfully."),t}catch(e){o.warn(`The config schema in "${r}" is invalid and will not be used.
To remove it and start fresh, run:
    rm ${r}`),o.debug(e)}}return o.debug(`Config file "${r}" does not exist, initializing default config.`),z.default.cloneDeep(xr)},N=class r{_config;static instance;constructor(){return r.instance||(this._config=fe(),r.instance=this,this._config.auth&&(c.BASE=this._config.auth.baseUrl,c.TOKEN=this._config.auth.apiKey)),r.instance}get auth(){return z.default.cloneDeep(this._config.auth)}get config(){return z.default.cloneDeep(this._config)}update(e){o.debug("Merging in config update:"),o.debug(e);let t=z.default.cloneDeep(this._config);z.default.merge(t,e),this._config=de.parse(t);let n=Ie(),i=ue.default.dirname(n);L.default.existsSync(i)||L.default.mkdirSync(i,{recursive:!0}),o.debug(`Writing merged config to "${n}":`,this._config),L.default.writeFileSync(n,JSON.stringify(this._config,null,2),{encoding:"utf-8"})}};var Ir=new ge.Command().name("list").description("Show the current config.").action(async()=>{let r=new N;X(r.config)}),Te=new ge.Command().name("config").description("Commands related to configuration and config files.").addCommand(Ir);var j=require("child_process"),x=require("fs"),G=y(require("path")),ee=y(require("process")),De=require("@commander-js/extra-typings"),C=require("@inquirer/prompts");var F=require("fs"),S=require("fs/promises"),E=y(require("path")),Ee=require("url"),ke=y(require("nunjucks"));var Tr=(0,Ee.fileURLToPath)(h),Er=E.default.dirname(Tr);async function ye(r){try{return await(0,S.access)(r,F.constants.F_OK),!0}catch{return!1}}function D(r,e=Er){let t=(0,F.readdirSync)(e);for(let i of t)if(typeof r=="string"?i===r:r.test(i))return E.default.join(e,i);let n=E.default.dirname(e);return n===e?null:D(r,n)}function Oe(){let r=kr(),e=(0,F.readFileSync)(r,{encoding:"utf-8"});return JSON.parse(e)}function Ne(){let r=D("sindri-manifest.json");if(!r)throw new Error("A `sindri-manifest.json` file was unexpectedly not found.");let e=(0,F.readFileSync)(r,{encoding:"utf-8"});return JSON.parse(e)}function kr(){let r=D("package.json");if(!r)throw new Error("A `package.json` file was unexpectedly not found.");return r}async function he(r,e,t){let n=E.default.resolve(e);await ye(n)||await(0,S.mkdir)(n,{recursive:!0});let i=D("templates");if(!i)throw new Error("Root template directory not found.");let s=E.default.isAbsolute(r)?r:E.default.resolve(i,r);if(!await ye(s))throw new Error(`The "${s}" directory does not exist.`);let p=(f,u)=>{let a=f;return Object.entries(u).forEach(([m,g])=>{typeof g=="string"&&(a=a.replace(new RegExp(`template${m.toUpperCase()}`,"gi"),g))}),ke.default.renderString(a,u)},d=async(f,u)=>{if((await(0,S.stat)(f)).isDirectory()){if(await ye(u)||(await(0,S.mkdir)(u,{recursive:!0}),o.debug(`Created directory: "${u}"`)),!(await(0,S.stat)(u)).isDirectory())throw new Error(`"File ${u} exists and is not a directory.`);let g=await(0,S.readdir)(f);await Promise.all(g.map(async w=>{let R=p(w,t);await d(E.default.join(f,w),E.default.join(u,R))}));return}let a=await(0,S.readFile)(f,{encoding:"utf-8"}),m=p(a,t);await(0,S.writeFile)(u,m,{encoding:"utf-8"}),o.debug(`Rendered "${f}" template to "${u}".`)};await d(s,n)}var _e=new De.Command().name("init").description("Initialize a new Sindri project.").argument("[directory]","The directory where the new project should be initialized.",".").action(async r=>{let e=G.default.resolve(r),t=G.default.basename(e);if(!(0,x.existsSync)(e))(0,x.mkdirSync)(e,{recursive:!0});else if(!(0,x.statSync)(e).isDirectory())return o.warn(`File "${e}" exists and is not a directory, aborting.`),ee.default.exit(1);if((0,x.readdirSync)(e).length>0&&!await(0,C.confirm)({message:`The "${e}" directory already exists and contains files. Continuing will overwrite your existing files. Are you *SURE* you would like to proceed?`,default:!1}))return o.info("Aborting."),ee.default.exit(1);let i=await(0,C.input)({message:"Circuit Name:",default:t.replace(/[^-a-zA-Z0-9_]/g,"-"),validate:a=>a.length===0?"You must specify a circuit name.":/^[-a-zA-Z0-9_]+$/.test(a)?!0:"Only alphanumeric characters, hyphens, and underscores are allowed."}),s=await(0,C.select)({message:"Proving Framework:",default:"circom",choices:[{name:"Circom",value:"circom"},{name:"Gnark",value:"gnark"},{name:"Halo2",value:"halo2"},{name:"Noir",value:"noir"}]}),p={circuitName:i,circuitType:s};if(s==="circom"){let a=await(0,C.select)({message:"Proving Scheme:",default:"groth16",choices:[{name:"Groth16",value:"groth16"}]}),m=await(0,C.select)({message:"Curve Name:",default:"bn254",choices:[{name:"BN254",value:"bn254"}]}),g=await(0,C.select)({message:"Witness Compiler:",default:"c++",choices:[{name:"C++",value:"c++"},{name:"Wasm",value:"wasm"}]});Object.assign(p,{curveName:m,provingScheme:a,witnessCompiler:g})}else if(s==="gnark"){let a=await(0,C.input)({message:"Go Package Name:",default:i.replace(/[^a-zA-Z0-9]/g,"").replace(/^[^a-z]*/g,""),validate:R=>R.length===0?"You must specify a package name.":/^[a-z][a-z0-9]*$/.test(R)?!0:"Package names must begin with a lowercase letter and only be followed by alphanumeric characters."}),m=await(0,C.select)({message:"Proving Scheme:",default:"groth16",choices:[{name:"Groth16",value:"groth16"}]}),g=await(0,C.select)({message:"Curve Name:",default:"bn254",choices:[{name:"BN254",value:"bn254"},{name:"BLS12-377",value:"bls12-377"},{name:"BLS12-381",value:"bls12-381"},{name:"BLS24-315",value:"bls24-315"},{name:"BW6-633",value:"bw6-633"},{name:"BW6-761",value:"bw6-761"}]}),w=g.toUpperCase().replace("-","_");Object.assign(p,{curveName:g,gnarkCurveName:w,packageName:a,provingScheme:m})}else if(s==="halo2"){let a=await(0,C.input)({message:"Halo2 Package Name:",default:i.toLowerCase().replace(/^[^a-z0-9_]+/,"_").replace(/_+/g,"_").replace(/-+/g,"-"),validate:l=>l.length===0?"You must specify a package name.":/^[a-z0-9_]+(?:-[a-z0-9_]+)*$/.test(l)?!0:"Package names must begin with a lowercase letter, number, or underscore, and only be followed by lowercase or numeric characters and underscores (optionally separated hyphens)."}),m=await(0,C.select)({message:"Halo2 Base Version:",default:"axiom-v0.3.0",choices:[{name:"Axiom v0.3.0",value:"axiom-v0.3.0"}]}),g=m!=="axiom-v0.3.0"?void 0:await(0,C.select)({message:"Halo2 Base Version:",default:"GateThreadBuilder",choices:[{name:"Gate Thread Builder",value:"GateThreadBuilder"}]}),w=parseInt(await(0,C.input)({message:"Degree:",default:"13",validate:l=>l.length===0?"You must specify a degree.":/^[1-9]\d*$/.test(l)?!0:"Degree must be a positive integer."}),10),R=`${a.replace(/-/g,"_")}::circuit_def::CircuitInput`;Object.assign(p,{className:R,halo2Version:m,degree:w,packageName:a,threadBuilder:g})}else if(s==="noir"){let a=await(0,C.input)({message:"Noir Package Name:",default:i.toLowerCase().replace(/[- ]/g,"_").replace(/[^a-zA-Z0-9_]+/,"").replace(/_+/g,"_"),validate:w=>w.length===0?"You must specify a package name.":/^[a-zA-Z0-9_]+$/.test(w)?!0:"Package names must only contain alphanumeric characters and underscores."}),m=await(0,C.select)({message:"Noir Version:",default:"0.23.0",choices:[{name:"0.17.0",value:"0.17.0"},{name:"0.18.0",value:"0.18.0"},{name:"0.19.4",value:"0.19.4"},{name:"0.22.0",value:"0.22.0"},{name:"0.23.0",value:"0.23.0"}]}),g=await(0,C.select)({message:"Proving Scheme:",default:"barretenberg",choices:[{name:"Barretenberg",value:"barretenberg"}]});Object.assign(p,{packageName:a,noirVersion:m,provingScheme:g})}else return o.fatal(`Sorry, ${s} is not yet supported.`),ee.default.exit(1);o.info(`Proceeding to generate scaffolded project in "${e}".`),await he("common",e,p),await he(s,e,p);let d=G.default.join(e,".gitkeep");if((0,x.existsSync)(d)&&(0,x.rmSync)(d),o.info("Project scaffolding successful."),s==="circom"){let a=!1;try{(0,j.execSync)("npm --version"),a=!0}catch{o.warn("NPM is not installed, cannot install circomlib as a dependency. You will need to install NPM and run `npm install` yourself.")}a&&(o.info("Installing circomlib."),(0,j.execSync)("npm install",{cwd:e}))}let f=!1;try{(0,j.execSync)("git --version"),f=!0}catch{o.debug("Git is not installed, skipping git initialization questions.")}let u=(0,x.existsSync)(G.default.join(e,".git"));if(f&&!u&&await(0,C.confirm)({message:`Would you like to initialize a git repository in "${e}"?`,default:!0})){o.info(`Initializing git repository in "${e}".`);try{(0,j.execSync)("git init .",{cwd:e}),(0,j.execSync)("git add .",{cwd:e}),(0,j.execSync)("git commit -m 'Initial commit.'",{cwd:e}),o.info("Successfully initialized git repository.")}catch(m){o.error("Error occurred while initializing the git repository.");let g=m;["output","stderr","stdout"].forEach(R=>{R in g&&(g[R]="<truncated>")}),o.error(g)}}});var $e=require("buffer"),oe=require("fs"),re=y(require("path")),P=y(require("process")),Fe=require("@commander-js/extra-typings"),je=require("formdata-node"),Be=y(require("ignore-walk")),qe=y(require("tar"));var ze=new Fe.Command().name("deploy").description("Deploy the current Sindri project.").option("-t, --tag <tag...>","Tag to apply to the circuit.",["latest"]).option("-u, --untagged","Discard the current circuit after compiling.").argument("[directory]","The location of the Sindri project to deploy.",".").action(async(r,{tag:e,untagged:t})=>{if(t){if(e.length!==1||e[0]!=="latest")return o.error("You cannot use both the `--tag` and `--untagged` options together."),P.default.exit(1)}else for(let l of e)if(!/^[-a-zA-Z0-9_]+$/.test(l))return o.error(`"${l}" is not a valid tag. Tags may only contain alphanumeric characters, underscores, and hyphens.`),P.default.exit(1);let n=re.default.resolve(r);if(!(0,oe.existsSync)(n))return o.error(`The "${n}" directory does not exist. Aborting.`),P.default.exit(1);let i=D(/^sindri.json$/i,n);if(!i)return o.error(`No "sindri.json" file was found in or above "${n}". Aborting.`),P.default.exit(1);o.debug(`Found "sindri.json" at "${i}".`);let s=re.default.dirname(i);o.debug(`Changing current directory to "${s}".`),P.default.chdir(s);let p={};try{let l=(0,oe.readFileSync)(i,{encoding:"utf-8"});p=JSON.parse(l),o.debug(`Successfully loaded "sindri.json" from "${i}":`),o.debug(p)}catch(l){return o.fatal(`Error loading "${i}", perhaps it is not valid JSON?`),o.error(l),P.default.exit(1)}if(!("name"in p))return o.error('No "name" field found in "sindri.json". Aborting.'),P.default.exit(1);let d=p.name;if(!c.TOKEN||!c.BASE)return o.warn("You must login first with `sindri login`."),P.default.exit(1);let f=Be.default.sync({follow:!0,ignoreFiles:[".sindriignore"],path:"."}).filter(l=>!/(^|\/)\.git(\/|$)/.test(l)),u=re.default.basename(i);f.includes(u)||f.push(u);let a=new je.FormData,m=`${d}.tar.gz`;if(o.info(`Creating "${m}" package with ${f.length} files.`),a.append("files",new $e.Blob([qe.default.c({gzip:!0,onwarn:(l,I)=>{o.warn(`While creating tarball: ${l} - ${I}`)},prefix:`${d}/`,sync:!0},f).read()]),m),t)a.append("tags","");else for(let l of e)a.append("tags",l);let g;try{o.info("Circuit compilation initiated.");let l=await v.circuitCreate(a);g=l.circuit_id,o.debug("/api/v1/circuit/create/ response:"),o.debug(l)}catch(l){if(l instanceof A&&l.status===401)o.error("Your credentials are invalid. Please log in again with `sindri login`.");else return o.fatal("An unknown error occurred."),o.error(l),P.default.exit(1)}if(!g)return o.error("No circuit ID was returned from the API. Aborting."),P.default.exit(1);let w=Date.now(),R;for(;;){try{o.debug("Polling for circuit compilation status.");let l=await v.circuitDetail(g,!1);R!==l.status&&(R=l.status,o.debug(`/api/v1/circuit/${g}/detail/ response:`),o.debug(l));let I=((Date.now()-w)/1e3).toFixed(1);if(l.status==="Ready"){o.info(`Circuit compiled successfully after ${I} seconds.`);break}else{if(l.status==="Failed")return o.error(`Circuit compilation failed after ${I} seconds: `+(l.error??"Unknown error.")),P.default.exit(1);l.status==="Queued"?o.debug("Circuit compilation is queued."):l.status==="In Progress"&&o.debug("Circuit compilation is in progress.")}}catch(l){return o.fatal("An unknown error occurred while polling for compilation to finish."),o.error(l),P.default.exit(1)}await new Promise(l=>setTimeout(l,1e3))}});var M=require("fs"),te=y(require("path")),B=y(require("process")),Le=require("@commander-js/extra-typings"),Je=require("jsonschema");var Ke=new Le.Command().name("lint").description("Lint the current Sindri project for potential issues.").argument("[directory]","The directory, or subdirectory, of the project to lint.",".").action(async r=>{let e=0,t=0,n;try{if(n=Ne(),!n)throw new Error('No "sindri-manifest.json" file found.');o.debug('Successfully loaded "sindri-manifest.json".')}catch{return o.error('No "sindri-manifest.json" JSON Schema file found. Aborting.'),B.default.exit(1)}let i=te.default.resolve(r);if(!(0,M.existsSync)(i))return o.error(`The "${i}" directory does not exist. Aborting.`),B.default.exit(1);let s=D(/^sindri.json$/i,i);if(!s)return o.error(`No "sindri.json" file was found in or above "${i}". Aborting.`),B.default.exit(1);o.debug(`Found "sindri.json" at "${s}".`);let p=te.default.dirname(s);o.debug(`Changing current directory to "${p}".`),B.default.chdir(i);let d={};try{let m=(0,M.readFileSync)(s,{encoding:"utf-8"});d=JSON.parse(m),o.debug(`Successfully loaded "sindri.json" from "${s}":`),o.debug(d)}catch(m){return o.fatal(`Error loading "${s}", perhaps it is not valid JSON?`),o.error(m),B.default.exit(1)}let u=new Je.Validator().validate(d,n,{nestedErrors:!0});if(u.valid)o.info(`Sindri manifest file "${s}" is valid.`);else{o.warn(`Sindri manifest file "${s}" contains errors:`);for(let m of u.errors){let g=m.property.replace(/^instance/,"sindri.json").replace(/\./g,":")+(typeof m.schema=="object"&&m.schema.title?`:${m.schema.title}`:"");o.error(`${g} ${m.message}`),e+=1}}let a=te.default.join(p,"README.md");if((0,M.existsSync)(a)?o.debug(`README file found at "${a}".`):(o.warn(`No project README was found at "${a}", consider adding one.`),t+=1),e===0&&t===0)o.info("No issues found, good job!");else if(o.warn(`Found ${e+t} problems (${e} errors, ${t} warnings).`),e>0)return o.error(`Linting failed with ${e} errors.`),B.default.exit(1)});var Ue=y(require("os")),be=y(require("process")),He=require("@commander-js/extra-typings"),k=require("@inquirer/prompts");var Ge=new He.Command().name("login").description("Authorize the client.").option("-u, --base-url <URL>","The base URL for the Sindri API. Mainly useful for development.",c.BASE).action(async({baseUrl:r})=>{let e=new N,t=e.auth;if(t){let p=!1;try{let d=await O.teamMe();o.debug("/api/v1/team/me/ response:"),o.debug(d),p=!0}catch(d){if(d instanceof A&&d.status===401)o.warn("Existing credentials found, but invalid. Please continue logging in to update them.");else return o.fatal("An unknown error occurred."),o.error(d),be.default.exit(1)}if(p&&!await(0,k.confirm)({message:`You are already logged in as ${t.teamSlug} on ${t.baseUrl}, are you sure you want to proceed?`,default:!1})){o.info("Aborting.");return}}let n=await(0,k.input)({message:"Username:"}),i=await(0,k.password)({mask:!0,message:"Password:"}),s=await(0,k.input)({default:`${Ue.default.hostname()}-sdk`,message:"New API Key Name:"});try{c.BASE=r;let p=await H.bf740E1AControllerObtainToken({username:n,password:i});o.debug("/api/token/ response:"),o.debug(p),c.TOKEN=p.access;let d=await O.userMeWithJwtAuth();o.debug("/api/v1/user/me/ response:"),o.debug(d);let f=await(0,k.select)({message:"Select a Organization:",choices:d.teams.map(({id:R,slug:l})=>({name:l,value:R}))}),u=d.teams.find(R=>R.id===f);if(!u)throw new Error("No organization selected.");c.HEADERS={"Sindri-Team-Id":`${f}`};let a=await _.apikeyGenerate({username:n,password:i,name:s});o.debug("/api/apikey/generate/ response:"),o.debug(a);let m=a.api_key,g=a.id,w=a.name;if(!m||!g||!w)throw new Error("Error generating API key.");e.update({auth:{apiKey:m,apiKeyId:g,apiKeyName:w,baseUrl:r,teamId:f,teamSlug:u.slug}}),o.info("You have successfully authorized the client with your Sindri account.")}catch(p){o.fatal("An irrecoverable error occurred."),o.error(p),be.default.exit(1)}});var Me=require("@commander-js/extra-typings"),We=require("@inquirer/prompts");var Ve=new Me.Command().name("logout").description("Remove the current client authorization credentials.").action(async()=>{let r=new N,e=r.auth;if(!e){o.error("You must log in first with `sindri login`.");return}if(await(0,We.confirm)({message:`Would you like to also revoke the "${e.apiKeyName}" API key? (recommended)`,default:!0}))try{let n=await _.apikeyDelete(e.apiKeyId);o.info(`Successfully revoked "${e.apiKeyName}" key.`),o.debug(`/api/v1/apikey/${e.apiKeyId}/delete/ response:`),o.debug(n)}catch(n){o.warn(`Error revoking "${e.apiKeyName}" key, proceeding to clear credentials anyway.`),o.error(n)}else o.warn("Skipping revocation of existing key.");r.update({auth:null}),o.info("You have successfully logged out.")});var we=y(require("process")),Ye=require("@commander-js/extra-typings");var Ze=new Ye.Command().name("whoami").description("Display the currently authorized organization name.").action(async()=>{if(!c.TOKEN||!c.BASE)return o.warn("You must login first with `sindri login`."),we.default.exit(1);try{let r=await O.teamMe();o.debug("/api/v1/team/me/ response:"),o.debug(r),X(r.team.slug)}catch(r){if(r instanceof A&&r.status===401)o.error("Your credentials are invalid. Please log in again with `sindri login`.");else return o.fatal("An unknown error occurred."),o.error(r),we.default.exit(1)}});var W=require("fs/promises"),ie=y(require("path")),Qe=y(require("gzip-js")),Xe=y(require("ignore-walk")),er=y(require("tar")),rr=y(require("tar-js"));var ne=class{pollingInterval=1e3;constructor(e={}){this.authorize(e)}get apiKey(){return c.TOKEN&&typeof c.TOKEN!="string"?null:c.TOKEN||null}get baseUrl(){return c.BASE}get logLevel(){return o.level}set logLevel(e){o.level=e}authorize(e){if(process.env.BROWSER_BUILD)c.BASE=e.baseUrl||"https://sindri.app",c.TOKEN=e.apiKey;else{let t=fe();c.BASE=e.baseUrl||process.env.SINDRI_BASE_URL||t.auth?.baseUrl||c.BASE||"https://sindri.app",c.TOKEN=e.apiKey||process.env.SINDRI_API_KEY||t.auth?.apiKey}return!!(c.BASE&&c.TOKEN)}async createCircuit(e,t=["latest"]){let n=new q;t=typeof t=="string"?[t]:t??[];for(let u of t){if(!/^[-a-zA-Z0-9_]+$/.test(u))throw new Error(`"${u}" is not a valid tag. Tags may only contain alphanumeric characters, underscores, and hyphens.`);n.append("tags",u)}if(t.length===0&&n.append("tags",""),typeof e=="string"){if(process.env.BROWSER_BUILD)throw new Error("Specifying `project` as a path is not allowed in the browser build.");let u;try{u=await(0,W.stat)(e)}catch{throw new Error(`The "${e}" path does not exist or you do not have permission to access it.`)}if(u.isFile()){if(!/\.(zip|tar|tar\.gz|tgz)$/i.test(e))throw new Error("Only gzipped tarballs or zip files are supported.");let a=ie.default.basename(e),m=await(0,W.readFile)(e);n.append("files",new U([m],a))}else if(u.isDirectory()){let a=ie.default.join(e,"sindri.json"),m;try{m=await(0,W.readFile)(a,{encoding:"utf-8"})}catch{throw new Error(`Expected Sindri manifest file at "${a}" does not exist.`)}let g;try{g=JSON.parse(m)}catch{throw new Error(`Could not parse "${a}", is it valid JSON?`)}let w=g?.name;if(!w)throw new Error(`No circuit "name" field was found in "${a}", the manifest is invalid.`);let R=Xe.default.sync({follow:!0,ignoreFiles:[".sindriignore"],path:e}).filter(J=>!/(^|\/)\.git(\/|$)/.test(J)),l=ie.default.basename(a);R.includes(l)||R.push(l);let I=`${w}.tar.gz`;R.sort((J,ce)=>J.localeCompare(ce));let ae=er.default.c({cwd:e,gzip:!0,onwarn:(J,ce)=>{o.warn(`While creating tarball: ${J} - ${ce}`)},prefix:`${w}/`,sync:!0},R);n.append("files",new U([ae.read()],I))}else throw new Error(`The "${e}" path is not a file or directory.`)}else if(Array.isArray(e)){if(!e.every(l=>l instanceof U))throw new Error("All entries in `project` must be `File` instances.");let u=e.find(l=>l.name==="sindri.json");if(!u)throw new Error("The `project` array must include a `sindri.json` file.");let a;try{a=JSON.parse(await u.text())}catch{throw new Error('Could not parse "sindri.json", is it valid JSON?')}let m=a?.name;if(!m)throw new Error('No circuit "name" field was found in "sindri.json", the manifest is invalid.');let g=new rr.default;e.sort((l,I)=>l.name.localeCompare(I.name));for(let l of e){let I=new Uint8Array(await l.arrayBuffer());await new Promise(ae=>g.append(`${m}/${l.name}`,I,ae))}let w=new Uint8Array(Qe.default.zip(g.out)),R=new U([w],`${m}.tar.gz`);process.env.BROWSER_BUILD,n.append("files",R)}let i=c.HEADERS;c.HEADERS={"Content-Type":"multipart/form-data; boundary=----WebKitFormBoundary0buQ8d6EhWcs9X9d"};let p=await v.circuitCreate(n);c.HEADERS=i;let d=p.circuit_id,f;for(;f=await v.circuitDetail(d,!1),!(f.status==="Ready"||f.status==="Failed");)await new Promise(u=>setTimeout(u,this.pollingInterval));return f}async getAllCircuitProofs(e){return await v.circuitProofs(e)}async getAllCircuits(){return await v.circuitList()}async getAllProofs(){return await $.proofList()}async getCircuit(e){return await v.circuitDetail(e)}async getProof(e){return await $.proofDetail(e)}async proveCircuit(e,t){let n=await v.proofCreate(e,{proof_input:t}),i;for(;i=await $.proofDetail(n.proof_id),!(i.status==="Ready"||i.status==="Failed");)await new Promise(s=>setTimeout(s,this.pollingInterval));return i}};var or=new ne;var nr=new ir.Command().name("sindri").description("The Sindri CLI client.").version(Oe().version??"unknown").option("-d, --debug","Enable debug logging.",!1).option("-q, --quiet","Disable all logging aside from direct command outputs for programmatic consumption.",!1).addCommand(Te).addCommand(_e).addCommand(ze).addCommand(Ke).addCommand(Ge).addCommand(Ve).addCommand(Ze).hook("preAction",async r=>{let{debug:e,quiet:t}=r.opts();if(e&&t)return o.error("You cannot specify both the `--debug` and `--quiet` arguments."),(0,se.exit)(1);e?o.level="trace":t?o.level="silent":o.level="info",o.debug(`Set log level to "${o.level}".`),(0,tr.default)(or)});require.main===module&&nr.parse(se.argv);0&&(module.exports={program});
//# sourceMappingURL=index.js.map